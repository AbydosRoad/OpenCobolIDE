# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ide.ui'
#
# Created: Sun Aug 11 00:00:28 2013
#      by: PyQt4 UI code generator 4.10
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.resize(1000, 750)
        MainWindow.setMinimumSize(QtCore.QSize(1000, 750))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/ide-icons/rc/silex-64x64.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.gridLayout = QtGui.QGridLayout(self.centralwidget)
        self.gridLayout.setMargin(0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.stackedWidget = QtGui.QStackedWidget(self.centralwidget)
        self.stackedWidget.setObjectName(_fromUtf8("stackedWidget"))
        self.page = QtGui.QWidget()
        self.page.setObjectName(_fromUtf8("page"))
        self.gridLayout_6 = QtGui.QGridLayout(self.page)
        self.gridLayout_6.setMargin(0)
        self.gridLayout_6.setSpacing(0)
        self.gridLayout_6.setObjectName(_fromUtf8("gridLayout_6"))
        self.QHomeWidget = QHomeWidget(self.page)
        self.QHomeWidget.setProperty("icon", icon)
        self.QHomeWidget.setObjectName(_fromUtf8("QHomeWidget"))
        self.gridLayout_6.addWidget(self.QHomeWidget, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page)
        self.page_2 = QtGui.QWidget()
        self.page_2.setObjectName(_fromUtf8("page_2"))
        self.gridLayout_2 = QtGui.QGridLayout(self.page_2)
        self.gridLayout_2.setMargin(6)
        self.gridLayout_2.setSpacing(6)
        self.gridLayout_2.setObjectName(_fromUtf8("gridLayout_2"))
        self.tabWidget = QtGui.QTabWidget(self.page_2)
        self.tabWidget.setTabsClosable(True)
        self.tabWidget.setObjectName(_fromUtf8("tabWidget"))
        self.gridLayout_2.addWidget(self.tabWidget, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_2)
        self.gridLayout.addWidget(self.stackedWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        MainWindow.setStatusBar(self.statusbar)
        self.toolBarFile = QtGui.QToolBar(MainWindow)
        self.toolBarFile.setObjectName(_fromUtf8("toolBarFile"))
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBarFile)
        self.toolBarCode = QtGui.QToolBar(MainWindow)
        self.toolBarCode.setObjectName(_fromUtf8("toolBarCode"))
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBarCode)
        self.dockWidgetLogs = QtGui.QDockWidget(MainWindow)
        self.dockWidgetLogs.setObjectName(_fromUtf8("dockWidgetLogs"))
        self.dockWidgetContents = QtGui.QWidget()
        self.dockWidgetContents.setObjectName(_fromUtf8("dockWidgetContents"))
        self.gridLayout_3 = QtGui.QGridLayout(self.dockWidgetContents)
        self.gridLayout_3.setObjectName(_fromUtf8("gridLayout_3"))
        self.tabWidgetLogs = QtGui.QTabWidget(self.dockWidgetContents)
        self.tabWidgetLogs.setObjectName(_fromUtf8("tabWidgetLogs"))
        self.tab_3 = QtGui.QWidget()
        self.tab_3.setObjectName(_fromUtf8("tab_3"))
        self.gridLayout_4 = QtGui.QGridLayout(self.tab_3)
        self.gridLayout_4.setObjectName(_fromUtf8("gridLayout_4"))
        self.listWidgetErrors = QtGui.QListWidget(self.tab_3)
        self.listWidgetErrors.setObjectName(_fromUtf8("listWidgetErrors"))
        self.gridLayout_4.addWidget(self.listWidgetErrors, 0, 0, 1, 1)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(_fromUtf8(":/ide-icons/rc/applications-system.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidgetLogs.addTab(self.tab_3, icon1, _fromUtf8(""))
        self.tabProgramOutput = QtGui.QWidget()
        self.tabProgramOutput.setObjectName(_fromUtf8("tabProgramOutput"))
        self.gridLayout_5 = QtGui.QGridLayout(self.tabProgramOutput)
        self.gridLayout_5.setObjectName(_fromUtf8("gridLayout_5"))
        self.plainTextEditOutput = QtGui.QPlainTextEdit(self.tabProgramOutput)
        self.plainTextEditOutput.setObjectName(_fromUtf8("plainTextEditOutput"))
        self.gridLayout_5.addWidget(self.plainTextEditOutput, 0, 0, 1, 1)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(_fromUtf8(":/ide-icons/rc/media-playback-start.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidgetLogs.addTab(self.tabProgramOutput, icon2, _fromUtf8(""))
        self.gridLayout_3.addWidget(self.tabWidgetLogs, 0, 0, 1, 1)
        self.dockWidgetLogs.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dockWidgetLogs)
        self.menuBar = QtGui.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1000, 29))
        self.menuBar.setObjectName(_fromUtf8("menuBar"))
        self.menuFile = QtGui.QMenu(self.menuBar)
        self.menuFile.setObjectName(_fromUtf8("menuFile"))
        self.menuRecent_files = QtGui.QMenu(self.menuFile)
        self.menuRecent_files.setObjectName(_fromUtf8("menuRecent_files"))
        self.menuEdit = QtGui.QMenu(self.menuBar)
        self.menuEdit.setObjectName(_fromUtf8("menuEdit"))
        self.mnuActiveEditor = QtGui.QMenu(self.menuEdit)
        self.mnuActiveEditor.setObjectName(_fromUtf8("mnuActiveEditor"))
        self.menuView = QtGui.QMenu(self.menuBar)
        self.menuView.setObjectName(_fromUtf8("menuView"))
        self.menuToolbars = QtGui.QMenu(self.menuView)
        self.menuToolbars.setObjectName(_fromUtf8("menuToolbars"))
        self.menuDock_panels = QtGui.QMenu(self.menuView)
        self.menuDock_panels.setObjectName(_fromUtf8("menuDock_panels"))
        self.menuCobol = QtGui.QMenu(self.menuBar)
        self.menuCobol.setObjectName(_fromUtf8("menuCobol"))
        self.menu = QtGui.QMenu(self.menuBar)
        self.menu.setObjectName(_fromUtf8("menu"))
        MainWindow.setMenuBar(self.menuBar)
        self.dockWidgetNavPanel = QtGui.QDockWidget(MainWindow)
        self.dockWidgetNavPanel.setObjectName(_fromUtf8("dockWidgetNavPanel"))
        self.dockWidgetContents_2 = QtGui.QWidget()
        self.dockWidgetContents_2.setObjectName(_fromUtf8("dockWidgetContents_2"))
        self.gridLayout_7 = QtGui.QGridLayout(self.dockWidgetContents_2)
        self.gridLayout_7.setObjectName(_fromUtf8("gridLayout_7"))
        self.twNavigation = QtGui.QTreeWidget(self.dockWidgetContents_2)
        self.twNavigation.setObjectName(_fromUtf8("twNavigation"))
        self.twNavigation.headerItem().setText(0, _fromUtf8("1"))
        self.twNavigation.header().setVisible(False)
        self.gridLayout_7.addWidget(self.twNavigation, 0, 0, 1, 1)
        self.dockWidgetNavPanel.setWidget(self.dockWidgetContents_2)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockWidgetNavPanel)
        self.actionQuit = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("exit"))
        self.actionQuit.setIcon(icon)
        self.actionQuit.setIconVisibleInMenu(True)
        self.actionQuit.setObjectName(_fromUtf8("actionQuit"))
        self.actionCompile = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("applications-system"))
        self.actionCompile.setIcon(icon)
        self.actionCompile.setIconVisibleInMenu(True)
        self.actionCompile.setObjectName(_fromUtf8("actionCompile"))
        self.actionRun = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("media-playback-start"))
        self.actionRun.setIcon(icon)
        self.actionRun.setIconVisibleInMenu(True)
        self.actionRun.setObjectName(_fromUtf8("actionRun"))
        self.actionAbout = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("dialog-information"))
        self.actionAbout.setIcon(icon)
        self.actionAbout.setIconVisibleInMenu(True)
        self.actionAbout.setObjectName(_fromUtf8("actionAbout"))
        self.actionSave = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("document-save"))
        self.actionSave.setIcon(icon)
        self.actionSave.setIconVisibleInMenu(True)
        self.actionSave.setObjectName(_fromUtf8("actionSave"))
        self.actionSave_as = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("document-save-as"))
        self.actionSave_as.setIcon(icon)
        self.actionSave_as.setIconVisibleInMenu(True)
        self.actionSave_as.setObjectName(_fromUtf8("actionSave_as"))
        self.actionFullscreen = QtGui.QAction(MainWindow)
        self.actionFullscreen.setCheckable(True)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("view-fullscreen"))
        self.actionFullscreen.setIcon(icon)
        self.actionFullscreen.setIconVisibleInMenu(True)
        self.actionFullscreen.setObjectName(_fromUtf8("actionFullscreen"))
        self.actionProgram = QtGui.QAction(MainWindow)
        self.actionProgram.setCheckable(True)
        self.actionProgram.setChecked(True)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("application-x-executable"))
        self.actionProgram.setIcon(icon)
        self.actionProgram.setIconVisibleInMenu(True)
        self.actionProgram.setObjectName(_fromUtf8("actionProgram"))
        self.actionSubprogram = QtGui.QAction(MainWindow)
        self.actionSubprogram.setCheckable(True)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(_fromUtf8(":/ide-icons/rc/application-x-sharedlib.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSubprogram.setIcon(icon3)
        self.actionSubprogram.setIconVisibleInMenu(True)
        self.actionSubprogram.setObjectName(_fromUtf8("actionSubprogram"))
        self.actionNew = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("document-new"))
        self.actionNew.setIcon(icon)
        self.actionNew.setIconVisibleInMenu(True)
        self.actionNew.setObjectName(_fromUtf8("actionNew"))
        self.actionOpen = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("document-open"))
        self.actionOpen.setIcon(icon)
        self.actionOpen.setIconVisibleInMenu(True)
        self.actionOpen.setObjectName(_fromUtf8("actionOpen"))
        self.actionClear = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("edit-clear"))
        self.actionClear.setIcon(icon)
        self.actionClear.setIconVisibleInMenu(True)
        self.actionClear.setObjectName(_fromUtf8("actionClear"))
        self.aShowFilesToolbar = QtGui.QAction(MainWindow)
        self.aShowFilesToolbar.setCheckable(True)
        self.aShowFilesToolbar.setObjectName(_fromUtf8("aShowFilesToolbar"))
        self.aShowCodeToolbar = QtGui.QAction(MainWindow)
        self.aShowCodeToolbar.setCheckable(True)
        self.aShowCodeToolbar.setObjectName(_fromUtf8("aShowCodeToolbar"))
        self.aShowLogsWin = QtGui.QAction(MainWindow)
        self.aShowLogsWin.setCheckable(True)
        self.aShowLogsWin.setObjectName(_fromUtf8("aShowLogsWin"))
        self.aShowNavWin = QtGui.QAction(MainWindow)
        self.aShowNavWin.setCheckable(True)
        self.aShowNavWin.setObjectName(_fromUtf8("aShowNavWin"))
        self.aPreferences = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme(_fromUtf8("preferences-system"))
        self.aPreferences.setIcon(icon)
        self.aPreferences.setIconVisibleInMenu(True)
        self.aPreferences.setObjectName(_fromUtf8("aPreferences"))
        self.toolBarFile.addAction(self.actionNew)
        self.toolBarFile.addAction(self.actionOpen)
        self.toolBarFile.addSeparator()
        self.toolBarFile.addAction(self.actionSave)
        self.toolBarCode.addAction(self.actionProgram)
        self.toolBarCode.addAction(self.actionSubprogram)
        self.toolBarCode.addSeparator()
        self.toolBarCode.addAction(self.actionCompile)
        self.toolBarCode.addAction(self.actionRun)
        self.menuRecent_files.addSeparator()
        self.menuRecent_files.addAction(self.actionClear)
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_as)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.menuRecent_files.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.mnuActiveEditor.addSeparator()
        self.menuEdit.addAction(self.mnuActiveEditor.menuAction())
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.aPreferences)
        self.menuToolbars.addAction(self.aShowFilesToolbar)
        self.menuToolbars.addAction(self.aShowCodeToolbar)
        self.menuDock_panels.addAction(self.aShowLogsWin)
        self.menuDock_panels.addAction(self.aShowNavWin)
        self.menuView.addAction(self.menuToolbars.menuAction())
        self.menuView.addAction(self.menuDock_panels.menuAction())
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionFullscreen)
        self.menuCobol.addAction(self.actionProgram)
        self.menuCobol.addAction(self.actionSubprogram)
        self.menuCobol.addSeparator()
        self.menuCobol.addAction(self.actionCompile)
        self.menuCobol.addAction(self.actionRun)
        self.menu.addAction(self.actionAbout)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuEdit.menuAction())
        self.menuBar.addAction(self.menuView.menuAction())
        self.menuBar.addAction(self.menuCobol.menuAction())
        self.menuBar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(-1)
        self.tabWidgetLogs.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "OpenCobolIDE", None))
        self.QHomeWidget.setProperty("title", _translate("MainWindow", "<html><head/><body><p><span style=\" font-size:20pt;\">Welcome to OpenCobolIDE</span></p></body></html>", None))
        self.toolBarFile.setWindowTitle(_translate("MainWindow", "Toolbar File", None))
        self.toolBarCode.setWindowTitle(_translate("MainWindow", "Toolbar Code", None))
        self.dockWidgetLogs.setWindowTitle(_translate("MainWindow", "Logs", None))
        self.tabWidgetLogs.setTabText(self.tabWidgetLogs.indexOf(self.tab_3), _translate("MainWindow", "Compiler", None))
        self.tabWidgetLogs.setTabToolTip(self.tabWidgetLogs.indexOf(self.tab_3), _translate("MainWindow", "Show compiler log", None))
        self.tabWidgetLogs.setTabText(self.tabWidgetLogs.indexOf(self.tabProgramOutput), _translate("MainWindow", "Output", None))
        self.menuFile.setTitle(_translate("MainWindow", "File", None))
        self.menuRecent_files.setTitle(_translate("MainWindow", "Recent files", None))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit", None))
        self.mnuActiveEditor.setTitle(_translate("MainWindow", "Active editor", None))
        self.menuView.setTitle(_translate("MainWindow", "View", None))
        self.menuToolbars.setTitle(_translate("MainWindow", "Toolbars", None))
        self.menuDock_panels.setTitle(_translate("MainWindow", "Windows", None))
        self.menuCobol.setTitle(_translate("MainWindow", "Cobol", None))
        self.menu.setTitle(_translate("MainWindow", "?", None))
        self.dockWidgetNavPanel.setWindowTitle(_translate("MainWindow", "Navigation", None))
        self.actionQuit.setText(_translate("MainWindow", "Quit", None))
        self.actionQuit.setToolTip(_translate("MainWindow", "Exit application (Ctrl+Q)", None))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q", None))
        self.actionCompile.setText(_translate("MainWindow", "Compile", None))
        self.actionCompile.setToolTip(_translate("MainWindow", "Compile the current file (F8)", None))
        self.actionCompile.setShortcut(_translate("MainWindow", "F8", None))
        self.actionRun.setText(_translate("MainWindow", "Run", None))
        self.actionRun.setToolTip(_translate("MainWindow", "Run the current file (F5)", None))
        self.actionRun.setShortcut(_translate("MainWindow", "F5", None))
        self.actionAbout.setText(_translate("MainWindow", "About", None))
        self.actionAbout.setToolTip(_translate("MainWindow", "About OpenCobol IDE (F1)", None))
        self.actionAbout.setShortcut(_translate("MainWindow", "F1", None))
        self.actionSave.setText(_translate("MainWindow", "Save", None))
        self.actionSave.setToolTip(_translate("MainWindow", "Save current file (Ctrl+S)", None))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S", None))
        self.actionSave_as.setText(_translate("MainWindow", "Save as", None))
        self.actionSave_as.setToolTip(_translate("MainWindow", "Save current file as (Ctrl+Shift+S)", None))
        self.actionSave_as.setShortcut(_translate("MainWindow", "Ctrl+Shift+S", None))
        self.actionFullscreen.setText(_translate("MainWindow", "Fullscreen", None))
        self.actionFullscreen.setToolTip(_translate("MainWindow", "Toggle fullscreen (F12)", None))
        self.actionFullscreen.setShortcut(_translate("MainWindow", "F11", None))
        self.actionProgram.setText(_translate("MainWindow", "Program", None))
        self.actionProgram.setToolTip(_translate("MainWindow", "<html><head/><body><p>Tells the ide to compile the current file as an executable (.exe)</p></body></html>", None))
        self.actionSubprogram.setText(_translate("MainWindow", "Subprogram", None))
        self.actionSubprogram.setToolTip(_translate("MainWindow", "<html><head/><body><p>Tells the ide to compile the current file as a subprogram (.so)</p></body></html>", None))
        self.actionNew.setText(_translate("MainWindow", "New", None))
        self.actionNew.setToolTip(_translate("MainWindow", "New file (Ctrl+N)", None))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N", None))
        self.actionOpen.setText(_translate("MainWindow", "Open", None))
        self.actionOpen.setToolTip(_translate("MainWindow", "Open a file (Ctrl+O)", None))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O", None))
        self.actionClear.setText(_translate("MainWindow", "Clear list", None))
        self.actionClear.setToolTip(_translate("MainWindow", "Clear list of recent files", None))
        self.aShowFilesToolbar.setText(_translate("MainWindow", "Files", None))
        self.aShowFilesToolbar.setToolTip(_translate("MainWindow", "Show/Hide the files toolbar", None))
        self.aShowCodeToolbar.setText(_translate("MainWindow", "Code", None))
        self.aShowCodeToolbar.setToolTip(_translate("MainWindow", "Show/Hide code toolbar", None))
        self.aShowLogsWin.setText(_translate("MainWindow", "Logs", None))
        self.aShowLogsWin.setToolTip(_translate("MainWindow", "Show/Hide logs window", None))
        self.aShowLogsWin.setShortcut(_translate("MainWindow", "F9", None))
        self.aShowNavWin.setText(_translate("MainWindow", "Navigation", None))
        self.aShowNavWin.setToolTip(_translate("MainWindow", "Show/Hide navigation panel", None))
        self.aShowNavWin.setShortcut(_translate("MainWindow", "F10", None))
        self.aPreferences.setText(_translate("MainWindow", "Preferences", None))
        self.aPreferences.setToolTip(_translate("MainWindow", "Edit the application settings", None))
        self.aPreferences.setShortcut(_translate("MainWindow", "F2", None))

from pyqode.widgets import QHomeWidget
import ide_rc
